function trainOptions = getTrainOptionsForParallel(modelOptions, XVal, YVal, numWindows, dataqueue, idx)
%GETTRAINOPTIONSFORPARALLEL Gets training options for DNN models for
%parallel training

if gpuDeviceCount > 0
    device = 'gpu';
else
    device = 'cpu';
end

switch modelOptions.name
    case 'Your model name'
    otherwise
        if modelOptions.hyperparameters.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', modelOptions.hyperparameters.epochs.value, ...
                'MiniBatchSize', modelOptions.hyperparameters.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', modelOptions.hyperparameters.learningRate.value, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', modelOptions.hyperparameters.epochs.value, ...
                'MiniBatchSize', modelOptions.hyperparameters.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', modelOptions.hyperparameters.learningRate.value, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * modelOptions.hyperparameters.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
end
end
