function trainOptions = getOptionsForParallel(options, XVal, YVal, numWindows, dataqueue, idx)
%GETOPTIONSFORPARALLEL
%
% Returns the training options for parallel training of DL models

if gpuDeviceCount > 0
    device = 'gpu';
else
    device = 'cpu';
end

switch options.model
    case 'FC AE'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'ValidationData', {XVal, YVal}, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'LSTM (r)'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'ValidationData', {XVal, YVal}, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'Hybrid CNN-LSTM (r)'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'TCN AE'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'ValidationData', {XVal, YVal}, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'LSTM'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'ValidationData', {XVal, YVal}, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'Hybrid CNN-LSTM'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'GRU'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'ValidationData', {XVal, YVal}, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'CNN (DeepAnT)'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'ResNet'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
    case 'MLP'
        if options.hyperparameters.training.ratioTrainVal.value == 0
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        else
            trainOptions = trainingOptions('adam', ...
                'MaxEpochs', options.hyperparameters.training.epochs.value, ...
                'GradientThreshold', 1, ...
                'InitialLearnRate', 0.001, ...
                'MiniBatchSize', options.hyperparameters.training.minibatchSize.value,...
                'Verbose', false, ...
                'Shuffle', 'every-epoch', ...
                'ExecutionEnvironment', device, ...
                'ValidationData', {XVal, YVal}, ...
                'ValidationFrequency', floor(numWindows / (3 * options.hyperparameters.training.minibatchSize.value)), ...
                'OutputFcn', @(info) send(dataqueue, struct('experimentNumber', idx, 'info', info)));
        end
end
end
