function scores = detectAndEvaluateWith(trainedModel, dataTest, labelsTest, threshold, dynamicThresholdSettings)
%DETECTANDEVALUATEWITH
%
% Runs the detection and returns the scores for the model

fprintf("Detecting with: %s\n", trainedModel.options.label);

[XTest, YTest, labels] = prepareDataTest(trainedModel.options, dataTest, labelsTest);
    
anomalyScores = detectWith(trainedModel, XTest, YTest, labels);

if ~trainedModel.options.outputsLabels
    [predictedLabels, ~] = applyThresholdToAnomalyScores(trainedModel, anomalyScores, labels, threshold, dynamicThresholdSettings);
else
    predictedLabels = anomalyScores;
end

[scoresPointwise, scoresEventwise, ...
            scoresPointAdjusted, scoresComposite] = calcScores(predictedLabels, labels);

scores = [scoresPointwise(3); ...
            scoresEventwise(3); ...
            scoresPointAdjusted(3); ...
            scoresComposite(1); ...
            scoresPointwise(4); ...
            scoresEventwise(4); ...
            scoresPointAdjusted(4); ...
            scoresComposite(2); ...
            scoresPointwise(1); ...
            scoresEventwise(1); ...
            scoresPointAdjusted(1); ...
            scoresPointwise(2); ...
            scoresEventwise(2); ...
            scoresPointAdjusted(2)];
end