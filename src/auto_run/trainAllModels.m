function trainedModels = trainAllModels(models_DNN, models_CML, models_S, dataTrain, labelsTrain, dataTestVal, labelsTestVal, thresholds, trainingPlots, trainParallel)
%TRAINALLMODELS Trains all selected models

numChannels = size(dataTrain{1, 1}, 2);

% Training DNN models
if ~isempty(models_DNN)
    fprintf('\nTraining DNN models\n\n')

    if trainParallel
        % This logic is required to corerctly determine which
        % models to train in parallel. Univariate models, which
        % train a separate model for every channel of multivariate
        % data, are trained parallel independently of one another
        
        if numChannels == 1
            models_DNN_parallel = models_DNN;
            models_DNN_consecutive = [];
        else
            models_DNN_parallel = [];
            models_DNN_consecutive = [];
            for i = 1:numel(models_DNN)
                if models_DNN(i).modelOptions.isMultivariate
                    models_DNN_parallel = [models_DNN_parallel, models_DNN(i)];
                else
                    models_DNN_consecutive = [models_DNN_consecutive, models_DNN(i)];
                end
            end
        end


        if ~isempty(models_DNN_parallel)
            trainedModels_tmp = trainModels_DNN_Parallel(models_DNN_parallel, ...
                                                            dataTrain, ...
                                                            labelsTrain, ...
                                                            dataTestVal, ...
                                                            labelsTestVal, ...
                                                            thresholds, ...
                                                            trainingPlots, ...
                                                            false);
            fields = fieldnames(trainedModels_tmp);
            for f_idx = 1:length(fields)
                trainedModels.(fields{f_idx}) = trainedModels_tmp.(fields{f_idx});
            end
        end
        if ~isempty(models_DNN_consecutive)
            trainedModels_tmp = trainModels(models_DNN_consecutive, ...
                                        dataTrain, ...
                                        labelsTrain, ...
                                        dataTestVal, ...
                                        labelsTestVal, ...
                                        thresholds, ...
                                        trainingPlots, ...
                                        true);
            fields = fieldnames(trainedModels_tmp);
            for f_idx = 1:length(fields)
                trainedModels.(fields{f_idx}) = trainedModels_tmp.(fields{f_idx});
            end
        end
    else
        trainedModels_tmp = trainModels(models_DNN, ...
                                        dataTrain, ...
                                        labelsTrain, ...
                                        dataTestVal, ...
                                        labelsTestVal, ...
                                        thresholds, ...
                                        trainingPlots, ...
                                        false);
        fields = fieldnames(trainedModels_tmp);
        for f_idx = 1:length(fields)
            trainedModels.(fields{f_idx}) = trainedModels_tmp.(fields{f_idx});
        end
    end
end

% Training CML models
if ~isempty(models_CML)
    fprintf('\nTraining CML models\n\n')
    trainedModels_tmp = trainModels(models_CML, ...
                                        dataTrain, ...
                                        labelsTrain, ...
                                        dataTestVal, ...
                                        labelsTestVal, ...
                                        thresholds, ...
                                        'none', ...
                                        false);
    fields = fieldnames(trainedModels_tmp);
    for f_idx = 1:length(fields)
        trainedModels.(fields{f_idx}) = trainedModels_tmp.(fields{f_idx});
    end
end

% Training S models
if ~isempty(models_S)
    fprintf('\nTraining Statistical models\n\n')
    trainedModels_tmp = trainModels(models_S, ...
                                        dataTrain, ...
                                        labelsTrain, ...
                                        dataTestVal, ...
                                        labelsTestVal, ...
                                        thresholds, ...
                                        'none', ...
                                        false);
    fields = fieldnames(trainedModels_tmp);
    for f_idx = 1:length(fields)
        trainedModels.(fields{f_idx}) = trainedModels_tmp.(fields{f_idx});
    end
end
end