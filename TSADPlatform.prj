<deployment-project plugin="plugin.apptool" plugin-version="1.0">
  <configuration build-checksum="364257627" file="C:\Ich\Studium\tsad_platform\TSADPlatform.prj" location="C:\Ich\Studium\tsad_platform" name="TSADPlatform" target="target.mlapps" target-name="Package App">
    <param.appname>TSADPlatform</param.appname>
    <param.authnamewatermark>Skander Ayoub, Adrian Wolf</param.authnamewatermark>
    <param.email />
    <param.company />
    <param.icon>${PROJECT_ROOT}\myApp_resources\icon_24.png</param.icon>
    <param.icons>
      <file>${PROJECT_ROOT}\myApp_resources\icon_48.png</file>
      <file>${PROJECT_ROOT}\myApp_resources\icon_24.png</file>
      <file>${PROJECT_ROOT}\myApp_resources\icon_16.png</file>
    </param.icons>
    <param.summary>Anomaly detection training and evaluation app</param.summary>
    <param.description />
    <param.screenshot />
    <param.version>0.1</param.version>
    <param.products.name>
      <item>MATLAB</item>
      <item>Simulink</item>
      <item>Deep Learning Toolbox</item>
      <item>Econometrics Toolbox</item>
      <item>Image Processing Toolbox</item>
      <item>Predictive Maintenance Toolbox</item>
      <item>Signal Processing Toolbox</item>
      <item>Statistics and Machine Learning Toolbox</item>
    </param.products.name>
    <param.products.id>
      <item>1</item>
      <item>2</item>
      <item>12</item>
      <item>125</item>
      <item>17</item>
      <item>158</item>
      <item>8</item>
      <item>19</item>
    </param.products.id>
    <param.products.version>
      <item>9.12</item>
      <item>10.5</item>
      <item>14.4</item>
      <item>6.0</item>
      <item>11.6</item>
      <item>2.5</item>
      <item>9.0</item>
      <item>12.3</item>
    </param.products.version>
    <param.platforms />
    <param.output>C:\Ich\Studium\tsad_platform</param.output>
    <param.guid>86075e5f-a220-4db0-a66d-9388fb758f1e</param.guid>
    <unset>
      <param.email />
      <param.company />
      <param.description />
      <param.screenshot />
      <param.platforms />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\TSADPlatform.mlapp</file>
    </fileset.main>
    <fileset.depfun>
      <file>${PROJECT_ROOT}\config\tsad_platform_config_all.json</file>
      <file>${PROJECT_ROOT}\config\tsad_platform_config_optimization.json</file>
      <file>${PROJECT_ROOT}\media\TSADPlatform_Icon.png</file>
      <file>${PROJECT_ROOT}\src\auto_run\calcAverageScores.m</file>
      <file>${PROJECT_ROOT}\src\auto_run\evaluateAllForDataset.m</file>
      <file>${PROJECT_ROOT}\src\auto_run\evaluateAllModels.m</file>
      <file>${PROJECT_ROOT}\src\auto_run\trainAllModels.m</file>
      <file>${PROJECT_ROOT}\src\auto_run\trainAndEvaluateAllModels.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\loadCustomDataset.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTest.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTest_DL.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTest_Other.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTrain.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTrain_DL.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\prepareDataTrain_Other.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\preprocessData.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\rescaleData.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\splitDatasetForDynamicSwitch.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\splitDataTest.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\splitDataTrain.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\splitTestVal.m</file>
      <file>${PROJECT_ROOT}\src\data_preparation\standardizeData.m</file>
      <file>${PROJECT_ROOT}\src\detection\applyScoringFunction.m</file>
      <file>${PROJECT_ROOT}\src\detection\applyThresholdToAnomalyScores.m</file>
      <file>${PROJECT_ROOT}\src\detection\calcScores.m</file>
      <file>${PROJECT_ROOT}\src\detection\detectAndEvaluateWith.m</file>
      <file>${PROJECT_ROOT}\src\detection\detectionWrapper.m</file>
      <file>${PROJECT_ROOT}\src\detection\detectWith_DL.m</file>
      <file>${PROJECT_ROOT}\src\detection\detectWith_Other.m</file>
      <file>${PROJECT_ROOT}\src\detection\detectWithModel.m</file>
      <file>${PROJECT_ROOT}\src\detection\find_cons_sequences.m</file>
      <file>${PROJECT_ROOT}\src\detection\getIndexes.m</file>
      <file>${PROJECT_ROOT}\src\detection\mergeOverlappingAnomalyScores.m</file>
      <file>${PROJECT_ROOT}\src\detection\mergeOverlappingSubsequences.m</file>
      <file>${PROJECT_ROOT}\src\detection\mergeSequences.m</file>
      <file>${PROJECT_ROOT}\src\detection\overlap_seg.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\diagnosticFeatures.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\evaluateDynamicSwitch.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\findBestModels.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\fitSwitchClassifier.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\getDataTrain_Switch.m</file>
      <file>${PROJECT_ROOT}\src\dynamic_switch\trainDynamicSwitchClassifier.m</file>
      <file>${PROJECT_ROOT}\src\global_definitions\METRIC_NAMES.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\addRandomWalk.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\addWhiteNoise.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\attenuateExtremum.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\augmentationData.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\GT_evaluateAllForDataset.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\GT_trainAndEvaluateAllModels.m</file>
      <file>${PROJECT_ROOT}\src\global_transformation\shiftData.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\deep_learning\getLayers.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\deep_learning\getNumFeaturesAndResponses.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\deep_learning\getTrainOptions.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\deep_learning\train_DL.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\deep_learning\trainWrapper_DL.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\getTrainingAnomalyScoreFeatures.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\angleBased\ABOD\ABOD.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\distanceBased\LDOF\LDOF.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\distributionBased\LOF\LOF.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\distributionBased\LOF\LOF_old.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\PCA_based\osPCA\OD_wpca.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\AnomalyDetectionToolbox\Algorithms\statisticBased\grubbs_test.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\THIRD_PARTY_LIBS\Merlin\run_MERLIN.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\trainingWrapper.m</file>
      <file>${PROJECT_ROOT}\src\models_and_training\trainModel.m</file>
      <file>${PROJECT_ROOT}\src\optimization\adaptModelOptions.m</file>
      <file>${PROJECT_ROOT}\src\optimization\autoOptimization.m</file>
      <file>${PROJECT_ROOT}\src\optimization\getOptimizationVariables.m</file>
      <file>${PROJECT_ROOT}\src\optimization\opt_fun.m</file>
      <file>${PROJECT_ROOT}\src\optimization\optimizeModel.m</file>
      <file>${PROJECT_ROOT}\src\optimization\trainAndEvaluateModel.m</file>
      <file>${PROJECT_ROOT}\src\popup_apps\CompTimeMetricSelection.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\DatasetVisualization.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\DynamicThresholdSettings.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\media\TSADPlatform_Icon.png</file>
      <file>${PROJECT_ROOT}\src\popup_apps\ModelSelection.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\OptimizationWindow.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\ScoringFunctionSelection.mlapp</file>
      <file>${PROJECT_ROOT}\src\popup_apps\ThresholdSelection.mlapp</file>
      <file>${PROJECT_ROOT}\src\thresholds\calcStaticThreshold.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\computeBestFscoreThreshold.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\compute_scores.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\count_above.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\deltas.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\find_anomalies.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\find_sequences.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\find_threshold.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\find_window_sequences.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\get_max_errors.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\merge_sequences.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\prune_anomalies.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\dynamic_threshold\z_cost.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\getStaticThresholds.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\getThresholdId.m</file>
      <file>${PROJECT_ROOT}\src\thresholds\getThresholdLabels.m</file>
    </fileset.depfun>
    <fileset.resources />
    <fileset.package />
    <build-deliverables>
      <file location="C:\Users\adria\Documents" name="MATLAB" optional="false">C:\Users\adria\Documents\MATLAB</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>C:\Program Files\MATLAB\R2022a</root>
      <toolboxes>
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>